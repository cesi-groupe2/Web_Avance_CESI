basePath: /
definitions:
  model.DayOpeningHours:
    properties:
      close:
        type: string
      open:
        type: string
    type: object
  model.Menuitem:
    properties:
      created_at:
        type: string
      description:
        type: string
      id_menu_item:
        type: integer
      id_restaurant:
        type: integer
      image:
        items:
          type: integer
        type: array
      name:
        type: string
      price:
        type: number
    type: object
  model.Restaurant:
    properties:
      address:
        type: string
      id_restaurant:
        type: integer
      localisation_latitude:
        type: number
      localisation_longitude:
        type: number
      name:
        type: string
      opening_hours:
        type: string
      phone:
        type: string
      picture:
        items:
          type: integer
        type: array
    type: object
  model.User:
    properties:
      already_sponsored:
        type: boolean
      created_at:
        type: string
      delivery_adress:
        type: string
      email:
        type: string
      facturation_adress:
        type: string
      first_name:
        type: string
      id_role:
        type: integer
      id_user:
        type: integer
      last_name:
        type: string
      password_hash:
        type: string
      phone:
        type: string
      profil_picture:
        items:
          type: integer
        type: array
      sponsorship_code:
        type: string
    type: object
host: localhost:8052
info:
  contact:
    email: benjamin.guerre@viacesi.fr
    name: Groupe 2 FISA INFO A4 CESI (2025)
    url: https://contact.easeat.fr
  description: This is a microservice for managing restaurants
  title: Swagger Easeat restaurant microservice
  version: "2.0"
paths:
  /restaurant/{restaurantId}:
    delete:
      consumes:
      - application/json
      description: Delete a restaurant by its id
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a restaurant
      tags:
      - restaurant
    get:
      consumes:
      - application/json
      description: Get a restaurant by its id
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Restaurant'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a restaurant by its id
      tags:
      - restaurant
    put:
      consumes:
      - application/json
      description: Update a restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      - description: Restaurant object
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/model.Restaurant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Restaurant'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a restaurant
      tags:
      - restaurant
  /restaurant/{restaurantId}/menuitems:
    get:
      consumes:
      - application/json
      description: Get menu items by restaurant id
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menuitem'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get menu items by restaurant id
      tags:
      - restaurant
  /restaurant/{restaurantId}/menuitems/{menuItemId}:
    delete:
      consumes:
      - application/json
      description: Delete menu item by id
      parameters:
      - description: Restaurant id
        in: path
        name: restaurantId
        required: true
        type: integer
      - description: Menu item id
        in: path
        name: menuItemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete menu item
      tags:
      - menuitem
    get:
      consumes:
      - application/json
      description: Get menu item by id
      parameters:
      - description: Restaurant id
        in: path
        name: restaurantId
        required: true
        type: integer
      - description: Menu item id
        in: path
        name: menuItemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menuitem'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get menu item by id
      tags:
      - menuitem
    put:
      consumes:
      - application/json
      description: Update menu item by id
      parameters:
      - description: Restaurant id
        in: path
        name: restaurantId
        required: true
        type: integer
      - description: Menu item id
        in: path
        name: menuItemId
        required: true
        type: integer
      - description: Menu item
        in: body
        name: menuItem
        required: true
        schema:
          $ref: '#/definitions/model.Menuitem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menuitem'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update menu item
      tags:
      - menuitem
  /restaurant/{restaurantId}/menuitems/new:
    post:
      consumes:
      - application/json
      description: Get menu items by restaurant id
      parameters:
      - description: Restaurant id
        in: path
        name: restaurantId
        required: true
        type: integer
      - description: Menu item
        in: body
        name: menuItem
        required: true
        schema:
          $ref: '#/definitions/model.Menuitem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menuitem'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get menu items by restaurant id
      tags:
      - menuitem
  /restaurant/{restaurantId}/proprio:
    get:
      consumes:
      - application/json
      description: Get restaurant owner by restaurant ID
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get restaurant owner by restaurant ID
      tags:
      - restaurant
  /restaurant/my:
    get:
      consumes:
      - application/json
      description: Get the restaurants owned by the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Restaurant'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get the restaurants owned by the user
      tags:
      - restaurant
  /restaurant/nearby/{latitude}/{longitude}/{kmAround}:
    get:
      consumes:
      - application/json
      description: Get nearby restaurants from the user's location
      parameters:
      - description: Latitude of the user
        in: path
        name: latitude
        required: true
        type: string
      - description: Longitude of the user
        in: path
        name: longitude
        required: true
        type: string
      - description: Distance around the user in km
        in: path
        name: kmAround
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Restaurant'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get nearby restaurants
      tags:
      - restaurant
  /restaurant/new:
    post:
      consumes:
      - multipart/form-data
      description: Create a new restaurant
      parameters:
      - description: Name of the restaurant
        in: formData
        name: name
        required: true
        type: string
      - description: Phone number of the restaurant
        in: formData
        name: phone
        required: true
        type: string
      - description: Address of the restaurant
        in: formData
        name: address
        required: true
        type: string
      - description: Latitude of the restaurant
        in: formData
        name: localisation_latitude
        required: true
        type: string
      - description: Longitude of the restaurant
        in: formData
        name: localisation_longitude
        required: true
        type: string
      - description: Picture of the restaurant
        in: formData
        name: picture
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Restaurant'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new restaurant
      tags:
      - restaurant
securityDefinitions:
  BearerAuth:
    description: Use /login to get your token and use it here
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
