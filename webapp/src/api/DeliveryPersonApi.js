/**
 * Swagger Easeat delivery persons microservice
 * This is a microservice for managing delivery persons
 *
 * The version of the OpenAPI document: 2.0
 * Contact: benjamin.guerre@viacesi.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomModelsDeliveryPersonStatus from '../model/CustomModelsDeliveryPersonStatus';
import DeliverypersonSetStatusStatusPostRequest from '../model/DeliverypersonSetStatusStatusPostRequest';

/**
* DeliveryPerson service.
* @module api/DeliveryPersonApi
* @version 2.0
*/
export default class DeliveryPersonApi {

    /**
    * Constructs a new DeliveryPersonApi. 
    * @alias module:api/DeliveryPersonApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deliverypersonGetStatusNearbyLatitudeLongitudeGet operation.
     * @callback module:api/DeliveryPersonApi~deliverypersonGetStatusNearbyLatitudeLongitudeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CustomModelsDeliveryPersonStatus>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get nearby delivery persons
     * Get nearby delivery persons
     * @param {String} latitude Latitude of the delivery person
     * @param {String} longitude Longitude of the delivery person
     * @param {module:api/DeliveryPersonApi~deliverypersonGetStatusNearbyLatitudeLongitudeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CustomModelsDeliveryPersonStatus>}
     */
    deliverypersonGetStatusNearbyLatitudeLongitudeGet(latitude, longitude, callback) {
      let postBody = null;
      // verify the required parameter 'latitude' is set
      if (latitude === undefined || latitude === null) {
        throw new Error("Missing the required parameter 'latitude' when calling deliverypersonGetStatusNearbyLatitudeLongitudeGet");
      }
      // verify the required parameter 'longitude' is set
      if (longitude === undefined || longitude === null) {
        throw new Error("Missing the required parameter 'longitude' when calling deliverypersonGetStatusNearbyLatitudeLongitudeGet");
      }

      let pathParams = {
        'latitude': latitude,
        'longitude': longitude
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CustomModelsDeliveryPersonStatus];
      return this.apiClient.callApi(
        '/deliveryperson/getStatus/nearby/{latitude}/{longitude}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deliverypersonSetStatusStatusPost operation.
     * @callback module:api/DeliveryPersonApi~deliverypersonSetStatusStatusPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomModelsDeliveryPersonStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set the status of a delivery person
     * Set the status of a delivery person
     * @param {String} status Status of the delivery person
     * @param {module:model/DeliverypersonSetStatusStatusPostRequest} deliverypersonSetStatusStatusPostRequest 
     * @param {module:api/DeliveryPersonApi~deliverypersonSetStatusStatusPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomModelsDeliveryPersonStatus}
     */
    deliverypersonSetStatusStatusPost(status, deliverypersonSetStatusStatusPostRequest, callback) {
      let postBody = deliverypersonSetStatusStatusPostRequest;
      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling deliverypersonSetStatusStatusPost");
      }
      // verify the required parameter 'deliverypersonSetStatusStatusPostRequest' is set
      if (deliverypersonSetStatusStatusPostRequest === undefined || deliverypersonSetStatusStatusPostRequest === null) {
        throw new Error("Missing the required parameter 'deliverypersonSetStatusStatusPostRequest' when calling deliverypersonSetStatusStatusPost");
      }

      let pathParams = {
        'status': status
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomModelsDeliveryPersonStatus;
      return this.apiClient.callApi(
        '/deliveryperson/setStatus/{status}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
