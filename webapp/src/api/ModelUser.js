/**
 * Swagger Easeat Notifications microservice
 * This is a microservice for managing notifications
 *
 * The version of the OpenAPI document: 1.0
 * Contact: benjamin.guerre@viacesi.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelUser model module.
 * @module model/ModelUser
 * @version 1.0
 */
class ModelUser {
    /**
     * Constructs a new <code>ModelUser</code>.
     * @alias module:model/ModelUser
     */
    constructor() { 
        
        ModelUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelUser} obj Optional instance to populate.
     * @return {module:model/ModelUser} The populated <code>ModelUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelUser();

            if (data.hasOwnProperty('already_sponsored')) {
                obj['already_sponsored'] = ApiClient.convertToType(data['already_sponsored'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('delivery_adress')) {
                obj['delivery_adress'] = ApiClient.convertToType(data['delivery_adress'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('facturation_adress')) {
                obj['facturation_adress'] = ApiClient.convertToType(data['facturation_adress'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('id_role')) {
                obj['id_role'] = ApiClient.convertToType(data['id_role'], 'Number');
            }
            if (data.hasOwnProperty('id_user')) {
                obj['id_user'] = ApiClient.convertToType(data['id_user'], 'Number');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('password_hash')) {
                obj['password_hash'] = ApiClient.convertToType(data['password_hash'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('profil_picture')) {
                obj['profil_picture'] = ApiClient.convertToType(data['profil_picture'], ['Number']);
            }
            if (data.hasOwnProperty('sponsorship_code')) {
                obj['sponsorship_code'] = ApiClient.convertToType(data['sponsorship_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelUser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['delivery_adress'] && !(typeof data['delivery_adress'] === 'string' || data['delivery_adress'] instanceof String)) {
            throw new Error("Expected the field `delivery_adress` to be a primitive type in the JSON string but got " + data['delivery_adress']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['facturation_adress'] && !(typeof data['facturation_adress'] === 'string' || data['facturation_adress'] instanceof String)) {
            throw new Error("Expected the field `facturation_adress` to be a primitive type in the JSON string but got " + data['facturation_adress']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['password_hash'] && !(typeof data['password_hash'] === 'string' || data['password_hash'] instanceof String)) {
            throw new Error("Expected the field `password_hash` to be a primitive type in the JSON string but got " + data['password_hash']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['profil_picture'])) {
            throw new Error("Expected the field `profil_picture` to be an array in the JSON data but got " + data['profil_picture']);
        }
        // ensure the json data is a string
        if (data['sponsorship_code'] && !(typeof data['sponsorship_code'] === 'string' || data['sponsorship_code'] instanceof String)) {
            throw new Error("Expected the field `sponsorship_code` to be a primitive type in the JSON string but got " + data['sponsorship_code']);
        }

        return true;
    }


}



/**
 * @member {Boolean} already_sponsored
 */
ModelUser.prototype['already_sponsored'] = undefined;

/**
 * @member {String} created_at
 */
ModelUser.prototype['created_at'] = undefined;

/**
 * @member {String} delivery_adress
 */
ModelUser.prototype['delivery_adress'] = undefined;

/**
 * @member {String} email
 */
ModelUser.prototype['email'] = undefined;

/**
 * @member {String} facturation_adress
 */
ModelUser.prototype['facturation_adress'] = undefined;

/**
 * @member {String} first_name
 */
ModelUser.prototype['first_name'] = undefined;

/**
 * @member {Number} id_role
 */
ModelUser.prototype['id_role'] = undefined;

/**
 * @member {Number} id_user
 */
ModelUser.prototype['id_user'] = undefined;

/**
 * @member {String} last_name
 */
ModelUser.prototype['last_name'] = undefined;

/**
 * @member {String} password_hash
 */
ModelUser.prototype['password_hash'] = undefined;

/**
 * @member {String} phone
 */
ModelUser.prototype['phone'] = undefined;

/**
 * @member {Array.<Number>} profil_picture
 */
ModelUser.prototype['profil_picture'] = undefined;

/**
 * @member {String} sponsorship_code
 */
ModelUser.prototype['sponsorship_code'] = undefined;






export default ModelUser;

