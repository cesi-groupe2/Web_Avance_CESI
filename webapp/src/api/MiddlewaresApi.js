/**
 * Swagger Easeat Auth API
 * This is a microservice for managing authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: benjamin.guerre@viacesi.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Middlewares service.
* @module api/MiddlewaresApi
* @version 1.0
*/
export default class MiddlewaresApi {

    /**
    * Constructs a new MiddlewaresApi. 
    * @alias module:api/MiddlewaresApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the canAccessRoleIdGet operation.
     * @callback module:api/MiddlewaresApi~canAccessRoleIdGetCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check if the user has the right role
     * Check if the user has the right role
     * @param {Number} roleId Role id
     * @param {module:api/MiddlewaresApi~canAccessRoleIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    canAccessRoleIdGet(roleId, callback) {
      let postBody = null;
      // verify the required parameter 'roleId' is set
      if (roleId === undefined || roleId === null) {
        throw new Error("Missing the required parameter 'roleId' when calling canAccessRoleIdGet");
      }

      let pathParams = {
        'roleId': roleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/canAccess/{roleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
